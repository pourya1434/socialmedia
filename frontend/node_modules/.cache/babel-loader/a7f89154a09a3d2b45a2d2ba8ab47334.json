{"ast":null,"code":"import axios from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\nimport { getAccessToken, getRefreshToken, getUser } from \"../hooks/user.actions\";\nconst axiosService = axios.create({\n  baseURL: \"http://localhost:8000/api\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\naxiosService.interceptors.request.use(async config => {\n  /**\n   * Retrieving the access and refresh tokens from the local storage\n   */\n  config.headers.Authorization = `Bearer ${getAccessToken()}`;\n  return config;\n});\naxiosService.interceptors.response.use(res => Promise.resolve(res), err => Promise.reject(err));\n\nconst refreshAuthLogic = async failedRequest => {\n  return axios.post(\"/auth/refresh/\", {\n    refresh: getRefreshToken()\n  }, {\n    baseURL: \"http://localhost:8000/api\"\n  }).then(resp => {\n    const {\n      access\n    } = resp.data;\n    failedRequest.response.config.headers[\"Authorization\"] = \"Bearer \" + access;\n    localStorage.setItem(\"auth\", JSON.stringify({\n      access,\n      refresh: getRefreshToken(),\n      user: getUser()\n    }));\n  }).catch(() => {\n    localStorage.removeItem(\"auth\");\n  });\n};\n\ncreateAuthRefreshInterceptor(axiosService, refreshAuthLogic);\nexport function fetcher(url) {\n  return axiosService.get(url).then(res => res.data);\n}\nexport default axiosService;","map":{"version":3,"names":["axios","createAuthRefreshInterceptor","getAccessToken","getRefreshToken","getUser","axiosService","create","baseURL","headers","interceptors","request","use","config","Authorization","response","res","Promise","resolve","err","reject","refreshAuthLogic","failedRequest","post","refresh","then","resp","access","data","localStorage","setItem","JSON","stringify","user","catch","removeItem","fetcher","url","get"],"sources":["/home/pourya/codes/socialmedia/frontend/src/helpers/axios.js"],"sourcesContent":["import axios from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\nimport {\n  getAccessToken,\n  getRefreshToken,\n  getUser,\n} from \"../hooks/user.actions\";\n\nconst axiosService = axios.create({\n  baseURL: \"http://localhost:8000/api\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\naxiosService.interceptors.request.use(async (config) => {\n  /**\n   * Retrieving the access and refresh tokens from the local storage\n   */\n  config.headers.Authorization = `Bearer ${getAccessToken()}`;\n  return config;\n});\n\naxiosService.interceptors.response.use(\n  (res) => Promise.resolve(res),\n  (err) => Promise.reject(err)\n);\n\nconst refreshAuthLogic = async (failedRequest) => {\n  return axios\n    .post(\n      \"/auth/refresh/\",\n      {\n        refresh: getRefreshToken(),\n      },\n      {\n        baseURL: \"http://localhost:8000/api\",\n      }\n    )\n    .then((resp) => {\n      const { access } = resp.data;\n      failedRequest.response.config.headers[\"Authorization\"] =\n        \"Bearer \" + access;\n      localStorage.setItem(\n        \"auth\",\n        JSON.stringify({ access, refresh: getRefreshToken(), user: getUser() })\n      );\n    })\n    .catch(() => {\n      localStorage.removeItem(\"auth\");\n    });\n};\n\ncreateAuthRefreshInterceptor(axiosService, refreshAuthLogic);\n\nexport function fetcher(url) {\n  return axiosService.get(url).then((res) => res.data);\n}\n\nexport default axiosService;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,4BAAP,MAAyC,oBAAzC;AACA,SACEC,cADF,EAEEC,eAFF,EAGEC,OAHF,QAIO,uBAJP;AAMA,MAAMC,YAAY,GAAGL,KAAK,CAACM,MAAN,CAAa;EAChCC,OAAO,EAAE,2BADuB;EAEhCC,OAAO,EAAE;IACP,gBAAgB;EADT;AAFuB,CAAb,CAArB;AAOAH,YAAY,CAACI,YAAb,CAA0BC,OAA1B,CAAkCC,GAAlC,CAAsC,MAAOC,MAAP,IAAkB;EACtD;AACF;AACA;EACEA,MAAM,CAACJ,OAAP,CAAeK,aAAf,GAAgC,UAASX,cAAc,EAAG,EAA1D;EACA,OAAOU,MAAP;AACD,CAND;AAQAP,YAAY,CAACI,YAAb,CAA0BK,QAA1B,CAAmCH,GAAnC,CACGI,GAAD,IAASC,OAAO,CAACC,OAAR,CAAgBF,GAAhB,CADX,EAEGG,GAAD,IAASF,OAAO,CAACG,MAAR,CAAeD,GAAf,CAFX;;AAKA,MAAME,gBAAgB,GAAG,MAAOC,aAAP,IAAyB;EAChD,OAAOrB,KAAK,CACTsB,IADI,CAEH,gBAFG,EAGH;IACEC,OAAO,EAAEpB,eAAe;EAD1B,CAHG,EAMH;IACEI,OAAO,EAAE;EADX,CANG,EAUJiB,IAVI,CAUEC,IAAD,IAAU;IACd,MAAM;MAAEC;IAAF,IAAaD,IAAI,CAACE,IAAxB;IACAN,aAAa,CAACP,QAAd,CAAuBF,MAAvB,CAA8BJ,OAA9B,CAAsC,eAAtC,IACE,YAAYkB,MADd;IAEAE,YAAY,CAACC,OAAb,CACE,MADF,EAEEC,IAAI,CAACC,SAAL,CAAe;MAAEL,MAAF;MAAUH,OAAO,EAAEpB,eAAe,EAAlC;MAAsC6B,IAAI,EAAE5B,OAAO;IAAnD,CAAf,CAFF;EAID,CAlBI,EAmBJ6B,KAnBI,CAmBE,MAAM;IACXL,YAAY,CAACM,UAAb,CAAwB,MAAxB;EACD,CArBI,CAAP;AAsBD,CAvBD;;AAyBAjC,4BAA4B,CAACI,YAAD,EAAee,gBAAf,CAA5B;AAEA,OAAO,SAASe,OAAT,CAAiBC,GAAjB,EAAsB;EAC3B,OAAO/B,YAAY,CAACgC,GAAb,CAAiBD,GAAjB,EAAsBZ,IAAtB,CAA4BT,GAAD,IAASA,GAAG,CAACY,IAAxC,CAAP;AACD;AAED,eAAetB,YAAf"},"metadata":{},"sourceType":"module"}